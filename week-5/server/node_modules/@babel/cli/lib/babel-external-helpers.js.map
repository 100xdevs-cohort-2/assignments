{"version":3,"names":["_commander","data","require","_core","collect","value","previousValue","values","split","push","commander","option","usage","parse","process","argv","console","log","buildExternalHelpers","whitelist","outputType"],"sources":["../src/babel-external-helpers.ts"],"sourcesContent":["import commander from \"commander\";\nimport { buildExternalHelpers } from \"@babel/core\";\n\nfunction collect(value: unknown, previousValue: Array<string>): Array<string> {\n  // If the user passed the option with no value, like \"babel-external-helpers --whitelist\", do nothing.\n  if (typeof value !== \"string\") return previousValue;\n\n  const values = value.split(\",\");\n\n  if (previousValue) {\n    previousValue.push(...values);\n    return previousValue;\n  }\n  return values;\n}\n\ncommander.option(\n  \"-l, --whitelist [whitelist]\",\n  \"Whitelist of helpers to ONLY include\",\n  collect,\n);\ncommander.option(\n  \"-t, --output-type [type]\",\n  \"Type of output (global|umd|var)\",\n  \"global\",\n);\n\ncommander.usage(\"[options]\");\ncommander.parse(process.argv);\n\nconsole.log(buildExternalHelpers(commander.whitelist, commander.outputType));\n"],"mappings":";;AAAA,SAAAA,WAAA;EAAA,MAAAC,IAAA,GAAAC,OAAA;EAAAF,UAAA,YAAAA,CAAA;IAAA,OAAAC,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AACA,SAAAE,MAAA;EAAA,MAAAF,IAAA,GAAAC,OAAA;EAAAC,KAAA,YAAAA,CAAA;IAAA,OAAAF,IAAA;EAAA;EAAA,OAAAA,IAAA;AAAA;AAEA,SAASG,OAAOA,CAACC,KAAc,EAAEC,aAA4B,EAAiB;EAE5E,IAAI,OAAOD,KAAK,KAAK,QAAQ,EAAE,OAAOC,aAAa;EAEnD,MAAMC,MAAM,GAAGF,KAAK,CAACG,KAAK,CAAC,GAAG,CAAC;EAE/B,IAAIF,aAAa,EAAE;IACjBA,aAAa,CAACG,IAAI,CAAC,GAAGF,MAAM,CAAC;IAC7B,OAAOD,aAAa;EACtB;EACA,OAAOC,MAAM;AACf;AAEAG,WAAQA,CAAC,CAACC,MAAM,CACd,6BAA6B,EAC7B,sCAAsC,EACtCP,OACF,CAAC;AACDM,WAAQA,CAAC,CAACC,MAAM,CACd,0BAA0B,EAC1B,iCAAiC,EACjC,QACF,CAAC;AAEDD,WAAQA,CAAC,CAACE,KAAK,CAAC,WAAW,CAAC;AAC5BF,WAAQA,CAAC,CAACG,KAAK,CAACC,OAAO,CAACC,IAAI,CAAC;AAE7BC,OAAO,CAACC,GAAG,CAAC,IAAAC,4BAAoB,EAACR,WAAQA,CAAC,CAACS,SAAS,EAAET,WAAQA,CAAC,CAACU,UAAU,CAAC,CAAC"}